#
# Copyright 2016-2021 the original author or authors from the JHipster project.
#
# This file is part of the JHipster project, see https://www.jhipster.tech/
# for more information.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: React
concurrency:
  # Group PRs by head_ref, push to main branch by commit id, and others branch by ref.
  group: ${{ github.workflow }}-${{ github.head_ref || (github.ref == 'refs/heads/main' && github.sha) || github.ref }}
  cancel-in-progress: true
on:
  push:
    branches-ignore:
      - 'dependabot/**'
      - 'skip_ci*'
  pull_request:
    types: [closed, opened, synchronize, reopened]
    branches:
      - '*'
jobs:
  applications:
    name: ${{ matrix.app-type }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ${{ github.workspace }}/app
    if: >-
      !contains(github.event.head_commit.message, '[ci skip]') &&
      !contains(github.event.head_commit.message, '[skip ci]') &&
      !contains(github.event.pull_request.title, '[skip ci]') &&
      !contains(github.event.pull_request.title, '[ci skip]') &&
      github.event.action != 'closed'
    timeout-minutes: 40
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        app-type:
          - react-default
          - react-maven-mysql-es-noi18n-mapsid
          - react-maven-h2mem-memcached
          - react-maven-cassandra-session-redis
          #                    - react-maven-couchbase-caffeine
          - react-gradle-mysql-es-noi18n-mapsid
          - react-gradle-h2mem-memcached
          - react-gradle-cassandra-session-redis
        #                    - react-gradle-couchbase-caffeine
        include:
          - app-type: react-default
            entity: sql
            environment: prod
            war: 0
            e2e: 1
            testcontainers: 0
          - app-type: react-maven-mysql-es-noi18n-mapsid
            entity: sqlfull
            environment: prod
            war: 0
            e2e: 1
            testcontainers: 1
          - app-type: react-maven-h2mem-memcached
            entity: sql
            environment: prod
            war: 0 # TODO: need change to 1, when maven+war is fixed
            e2e: 1
            testcontainers: 0
          - app-type: react-maven-cassandra-session-redis
            entity: cassandra
            environment: prod
            war: 0
            e2e: 1
            testcontainers: 1
          #                    - app-type: react-maven-couchbase-caffeine
          #                      entity: couchbase
          #                      environment: prod
          #                      war: 0
          #                      e2e: 0
          #                      testcontainers: 0
          - app-type: react-gradle-mysql-es-noi18n-mapsid
            entity: sqlfull
            environment: prod
            war: 0
            e2e: 1
            testcontainers: 0
          - app-type: react-gradle-h2mem-memcached
            entity: sql
            environment: prod
            war: 1
            e2e: 1
            testcontainers: 0
          - app-type: react-gradle-cassandra-session-redis
            entity: cassandra
            environment: prod
            war: 0
            e2e: 1
            testcontainers: 1
    #                    - app-type: react-gradle-couchbase-caffeine
    #                      entity: couchbase
    #                      environment: prod
    #                      war: 0
    #                      e2e: 1
    #                      testcontainers: 0
    steps:
      #----------------------------------------------------------------------
      # Install all tools and check configuration
      #----------------------------------------------------------------------
      - name: 'SETUP: Checkout generator-jhipster'
        uses: actions/checkout@v2.3.4
        with:
          repository: 'jhipster/generator-jhipster'
          path: generator-jhipster
          # shows 5 commits at log
          fetch-depth: 5
          ref: main
      - name: 'SETUP: Checkout jhipster'
        uses: actions/checkout@v2.3.4
        with:
          path: jhipster-bom
      - name: 'SETUP: environment'
        id: setup
        uses: ./generator-jhipster/.github/actions/setup
        with:
          entities-sample: ${{ matrix.entity }}
          application-sample: ${{ matrix.app-type }}
          application-environment: ${{ matrix.environment }}
          application-packaging: ${{ (matrix.war == 1 && 'war') || 'jar' }}
          enable-testcontainers: ${{ matrix.testcontainers == 1 }}
          generator-jhipster-branch: local
      - uses: actions/setup-node@v2.2.0
        with:
          node-version: ${{ steps.setup.outputs.node-version }}
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ steps.setup.outputs.java-version }}
      - name: 'SETUP: load cache'
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.npm
            ~/.cache/Cypress/
            ~/.m2/repository
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-cache-${{ steps.setup.outputs.date }}-${{ hashFiles('pom.xml', '**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-cache-${{ steps.setup.outputs.date }}-
            ${{ runner.os }}-cache-${{ steps.setup.outputs.date }}
      - name: 'TOOLS: configure tools installed by the system'
        run: $JHI_SCRIPTS/03-system.sh
      - name: 'TOOLS: configure git'
        run: $JHI_SCRIPTS/04-git-config.sh
      #----------------------------------------------------------------------
      # Install JHipster and generate project+entities
      #----------------------------------------------------------------------
      - name: 'GENERATION: install JHipster'
        run: $JHI_SCRIPTS/10-install-jhipster.sh
      - name: 'GENERATION: config'
        run: $JHI_SCRIPTS/11-generate-config.sh
      - name: 'GENERATION: project'
        run: $JHI_SCRIPTS/12-generate-project.sh
      - name: 'GENERATION: replace version in generated project'
        run: $JHI_SCRIPTS/13-replace-version-generated-project.sh
      - name: 'GENERATION: jhipster info'
        run: $JHI_SCRIPTS/14-jhipster-info.sh
      #----------------------------------------------------------------------
      # Launch tests
      #----------------------------------------------------------------------
      - name: 'TESTS: Start docker-compose containers'
        run: npm run ci:e2e:prepare
      - name: 'TESTS: backend'
        run: npm run ci:backend:test
      - name: 'TESTS: frontend'
        run: npm run ci:frontend:test
      - name: 'TESTS: packaging'
        run: npm run ci:e2e:package
      - name: 'E2E: Run'
        id: e2e
        run: npm run ci:e2e:run --if-present
      - name: 'E2E: Store failure screenshots'
        uses: actions/upload-artifact@v2
        if: always() && steps.e2e.outcome == 'failure'
        with:
          name: screenshots-${{ matrix.app-type }}
          path: ${{ steps.setup.outputs.application-path }}/*/cypress/screenshots
      - name: 'ANALYSIS: Sonar analysis'
        run: $JHI_SCRIPTS/25-sonar-analyze.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
